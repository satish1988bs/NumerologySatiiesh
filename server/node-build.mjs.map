{"version":3,"file":"node-build.mjs","sources":["../../server/routes/demo.ts","../../server/routes/register-appointment.ts","../../server/index.ts","../../server/node-build.ts"],"sourcesContent":["import { RequestHandler } from \"express\";\nimport { DemoResponse } from \"@shared/api\";\n\nexport const handleDemo: RequestHandler = (req, res) => {\n  const response: DemoResponse = {\n    message: \"Hello from Express server\",\n  };\n  res.status(200).json(response);\n};\n","import { RequestHandler } from \"express\";\nimport { writeFileSync, readFileSync, existsSync } from \"fs\";\nimport { join } from \"path\";\n\ninterface RegistrationData {\n  id: string;\n  fullName: string;\n  email: string;\n  phone: string;\n  dateOfBirth: string;\n  timeOfBirth: string;\n  placeOfBirth: string;\n  service: string;\n  additionalNotes: string;\n  submittedAt: string;\n}\n\nconst REGISTRATIONS_FILE = join(process.cwd(), 'registrations.json');\n\n// Helper function to read existing registrations\nconst readRegistrations = (): RegistrationData[] => {\n  if (!existsSync(REGISTRATIONS_FILE)) {\n    return [];\n  }\n  \n  try {\n    const data = readFileSync(REGISTRATIONS_FILE, 'utf-8');\n    return JSON.parse(data);\n  } catch (error) {\n    console.error('Error reading registrations:', error);\n    return [];\n  }\n};\n\n// Helper function to save registrations\nconst saveRegistrations = (registrations: RegistrationData[]): void => {\n  try {\n    writeFileSync(REGISTRATIONS_FILE, JSON.stringify(registrations, null, 2));\n  } catch (error) {\n    console.error('Error saving registrations:', error);\n    throw error;\n  }\n};\n\nexport const handleRegisterAppointment: RequestHandler = (req, res) => {\n  try {\n    const {\n      fullName,\n      email,\n      phone,\n      dateOfBirth,\n      timeOfBirth,\n      placeOfBirth,\n      service,\n      additionalNotes,\n      submittedAt\n    } = req.body;\n\n    // Validate required fields\n    if (!fullName || !email || !phone || !dateOfBirth || !placeOfBirth || !service) {\n      return res.status(400).json({\n        error: 'Missing required fields: fullName, email, phone, dateOfBirth, placeOfBirth, service'\n      });\n    }\n\n    // Generate unique ID\n    const id = `REG_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n\n    // Create registration object\n    const registration: RegistrationData = {\n      id,\n      fullName,\n      email,\n      phone,\n      dateOfBirth,\n      timeOfBirth: timeOfBirth || '',\n      placeOfBirth,\n      service,\n      additionalNotes: additionalNotes || '',\n      submittedAt: submittedAt || new Date().toISOString()\n    };\n\n    // Read existing registrations\n    const registrations = readRegistrations();\n\n    // Add new registration\n    registrations.push(registration);\n\n    // Save to file\n    saveRegistrations(registrations);\n\n    console.log(`New appointment registration: ${fullName} (${email}) - ${service}`);\n\n    res.status(200).json({\n      success: true,\n      message: 'Registration successful',\n      registrationId: id\n    });\n\n  } catch (error) {\n    console.error('Error processing registration:', error);\n    res.status(500).json({\n      error: 'Internal server error'\n    });\n  }\n};\n\n// Optional: Handler to get all registrations (for admin use)\nexport const handleGetRegistrations: RequestHandler = (req, res) => {\n  try {\n    const registrations = readRegistrations();\n    res.status(200).json({\n      success: true,\n      registrations,\n      total: registrations.length\n    });\n  } catch (error) {\n    console.error('Error fetching registrations:', error);\n    res.status(500).json({\n      error: 'Internal server error'\n    });\n  }\n};\n","import \"dotenv/config\";\nimport express from \"express\";\nimport cors from \"cors\";\nimport { handleDemo } from \"./routes/demo\";\nimport { handleRegisterAppointment, handleGetRegistrations } from \"./routes/register-appointment\";\n\nexport function createServer() {\n  const app = express();\n\n  // Middleware\n  app.use(cors());\n  app.use(express.json());\n  app.use(express.urlencoded({ extended: true }));\n\n  // Example API routes\n  app.get(\"/api/ping\", (_req, res) => {\n    const ping = process.env.PING_MESSAGE ?? \"ping\";\n    res.json({ message: ping });\n  });\n\n  app.get(\"/api/demo\", handleDemo);\n\n  // Registration API routes\n  app.post(\"/api/register-appointment\", handleRegisterAppointment);\n  app.get(\"/api/registrations\", handleGetRegistrations);\n\n  return app;\n}\n","import path from \"path\";\nimport { createServer } from \"./index\";\nimport * as express from \"express\";\n\nconst app = createServer();\nconst port = process.env.PORT || 3000;\n\n// In production, serve the built SPA files\nconst __dirname = import.meta.dirname;\nconst distPath = path.join(__dirname, \"../spa\");\n\n// Serve static files\napp.use(express.static(distPath));\n\n// Handle React Router - serve index.html for all non-API routes\napp.get(\"*\", (req, res) => {\n  // Don't serve index.html for API routes\n  if (req.path.startsWith(\"/api/\") || req.path.startsWith(\"/health\")) {\n    return res.status(404).json({ error: \"API endpoint not found\" });\n  }\n\n  res.sendFile(path.join(distPath, \"index.html\"));\n});\n\napp.listen(port, () => {\n  console.log(`ðŸš€ Fusion Starter server running on port ${port}`);\n  console.log(`ðŸ“± Frontend: http://localhost:${port}`);\n  console.log(`ðŸ”§ API: http://localhost:${port}/api`);\n});\n\n// Graceful shutdown\nprocess.on(\"SIGTERM\", () => {\n  console.log(\"ðŸ›‘ Received SIGTERM, shutting down gracefully\");\n  process.exit(0);\n});\n\nprocess.on(\"SIGINT\", () => {\n  console.log(\"ðŸ›‘ Received SIGINT, shutting down gracefully\");\n  process.exit(0);\n});\n"],"names":["app","express"],"mappings":"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"}